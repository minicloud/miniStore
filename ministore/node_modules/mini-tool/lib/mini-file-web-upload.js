var util          = require('util');
var EventEmitter  = require('events').EventEmitter;
var MiniFileUtils = require('./mini-file-utils').MiniFileUtils;
var miniFileUtils = new MiniFileUtils(); 
var fs            = require('fs');
function MiniFileWebUpload(miniHttp){
	EventEmitter.call(this);
	//把网页上传的文件移动到正式目录下  
	this.logger        = miniHttp.logger;
	var tmpFilePath    = miniHttp.files.file.path; 
	var signature      = miniHttp.files.file.hash;
	var pathList       = miniHttp.appConfig.path;
	var stat           = fs.statSync(tmpFilePath); 
	var normalPath     = miniFileUtils.getFileContentNormalPath(pathList,signature,stat.size);
	//创建父亲目录
	if(!fs.existsSync(normalPath)){
		var folderPath = require('path').dirname(normalPath);
	    if(!fs.existsSync(folderPath)){
		    //创建存储路径
		    var mkdirp = require('mkdirp');
		    mkdirp.sync(folderPath);
	    } 
	    //文件上传结束，把临时文件重新命名为正式文件
	    //tmp存储路径与目标存储目录可能不在同一分区，采用renameSync会出现错误
	    var readStream = fs.createReadStream(tmpFilePath)
      	var writeFile  = fs.createWriteStream(normalPath);
        readStream.pipe(writeFile);
        readStream.on("end",function(){
            fs.unlinkSync(tmpFilePath);
        });
	}
	//网页上传的文件在迷你存储这里获得文件的大小与sha1值
	//并且向迷你云发送请求 
	var postUrl = miniHttp.req.url;
	var pos = postUrl.indexOf("callback=");
	var callbackUrl = postUrl.substring(pos+"callback=".length,postUrl.length);
	callbackUrl +="&route=module/miniStore/report&signature="+signature+"&size="+stat.size;
  	var successCallback = function(data){
		var responseData = {
			code:200,
			data:data
		};				
		miniHttp.response(responseData);
	}; 
	var errorCallback = function(data){
		var responseData = {
			code:401,
			data:data
		};
		miniHttp.response(responseData);
	}; 
	miniHttp.createRequest(callbackUrl,{path:miniHttp.params.path},successCallback,errorCallback);
	
} 
exports.MiniFileWebUpload = MiniFileWebUpload;
util.inherits(MiniFileWebUpload, EventEmitter);