
var util          = require('util'); 
var EventEmitter  = require('events').EventEmitter; 
var crc           = require('crc'); 
var fs            = require('fs'); 
var MiniFileUtils = require('./mini-file-utils').MiniFileUtils;
var miniFileUtils = new MiniFileUtils(); 

function MiniFileSearch(config,miniHttp,sphinxClient){
	EventEmitter.call(this); 
	this.config       = config; 
	this.miniHttp     = miniHttp;
	this.key          = miniHttp.queryParam("key",""); 
	this.siteId       = miniHttp.queryParam("site_id","");
	//形成摘要需要的参数
	//高亮显示前置代码
	var beforeMatch  = miniHttp.queryParam("before_match","<span style='background-color: #ffff00'><b>");
	//高亮显示后置代码
	var afterMatch   = miniHttp.queryParam("after_match","</b></span>");
	//高亮显示后缀
	var chunkSeparator   = miniHttp.queryParam("chunk_separator"," ... ");
	//高亮显示字符长度
	var limit        = parseInt(miniHttp.queryParam("limit",150));
	//高亮显示前置代码
	var around       = parseInt(miniHttp.queryParam("around",75));

	this.opts ={
		"before_match":beforeMatch,
		"after_match":afterMatch,
		"chunk_separator":chunkSeparator,
		"limit":limit,
		"around":around
	}
	this.seachList = []; 
	this.sphinxClient = sphinxClient;
	if(this.key==""){
		//向迷你云报俊
		this.report();
	}else{
		this.search();
	}
	
} 
exports.MiniFileSearch = MiniFileSearch;
util.inherits(MiniFileSearch, EventEmitter);
//向迷你云报俊
MiniFileSearch.prototype.report = function(){ 
	var status = 1;
	if(this.seachList.length==0){
		status = 0;
	}
	//发送任务接受成功请求
	var data = {
			"status":status,
			"result":this.seachList
	}; 
	var responseData = {
			code:200,
			data:data
	};				
	this.miniHttp.response(responseData);
}
//sphinx搜索，返回signature值，多条记录以,分割
MiniFileSearch.prototype.search = function(){
	var self         = this;
	var siteId       = self.siteId;
	var key          = self.key;
	var cl           = self.sphinxClient;
	var index        = "main"; 
	var siteIdCrc    = crc.crc32(siteId);
    cl.ResetFilters(); 
	cl.Query(key,function(err, result) { 
		if(typeof result=='undefined' || result==null){ 
			//把结果返回给迷你云
			self.report();
			return;
		}  
		var docs       = [];
		var signatures = [];
		var record     = {};
		var items      = result.matches;
		for (var i=0;i<items.length;i++) {
			var item      = items[i];
			var signature = item.attrs.signature;  
			if(typeof(record[signature])=='undefined'){
				//排除重复的内容
				//形成摘要信息
				var txtFilePath   = miniFileUtils.getFileContentPath(self.config.txt_save_path,signature);
				if(fs.existsSync(txtFilePath)){  
					var content   = fs.readFileSync(txtFilePath).toString(); 
					docs.push(content);
					signatures.push(signature);
					record[signature] = 1;
				} 
			} 
		}    
		//通过sphinx形成摘要
		cl.BuildExcerpts(docs,index, key, self.opts,function(err,summaryList){
			if(summaryList==null){
				self.report();
			}else{
				for(var i=0;i<summaryList.length;i++){
					var searchItem = {
						"signature":signatures[i],
						"summary":summaryList[i]
					};
					self.seachList.push(searchItem); 
				}
				self.report();
			} 
		}); 
		
	});
}
