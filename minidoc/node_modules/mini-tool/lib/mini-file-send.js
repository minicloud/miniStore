var util          = require('util');
var EventEmitter  = require('events').EventEmitter;
var MiniFileUtils = require('./mini-file-utils').MiniFileUtils;
var fs            = require("fs");
var path          = require("path");
/**
* 文件下载，Node不直接下载文件，它使用Nginx的sendfile模式下载文件
**/
function MiniFileSend(miniHttp){
	EventEmitter.call(this);

	this.dataPath     = miniHttp.appConfig.path;
	var fileName      = miniHttp.queryParam("file_name","");
	var mimeType      = miniHttp.queryParam("mime_type","");
	var forceDownload = parseInt(miniHttp.queryParam("force_download",0))==1?true:false;
	var signature     = miniHttp.queryParam("signature","");
	var miniFileUtils = new MiniFileUtils();
    var folderPath    = miniFileUtils.getFileContentFolder(this.dataPath,signature);
	var filePath      = path.join(folderPath,signature)+path.extname(fileName);
	if(fs.existsSync(filePath)){ 
		//下载文件
		miniHttp.xsendFile(this.getNginxPath(filePath),fileName,mimeType,forceDownload);
	}else{
		var responseData = {
			code:404,
			data:{ 
				msg:filePath+"file not found"
			}
		};				
		miniHttp.response(responseData);
	} 
	
} 
exports.MiniFileSend = MiniFileSend;
util.inherits(MiniFileSend, EventEmitter);
/**
*获得Nginx下的配置路径
*它与pathList对应
*如迷你存储配置可用目录如下，那么它分别对应Nginx虚拟路径的d0..d2
*@param filePath 文件的绝对路径
*"/Users/jim/code/miniDoc/data/"|d0
*返回值为/d0/a5/02/79/cf/a50279cf7f2a16da00edcadbcc1895a69d98a912
*/
MiniFileSend.prototype.getNginxPath=function(filePath){
	return "/d0"+filePath.substring(this.dataPath.length,filePath.length);
		
}