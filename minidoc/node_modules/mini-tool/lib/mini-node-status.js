var util         = require('util');
var http         = require("http");
var EventEmitter = require('events').EventEmitter; 
function MiniNodeStatus(miniHttp){
	EventEmitter.call(this);
	this.logger = miniHttp.logger;
	var self = this;
	var reportSuccess = function(){
		var data = {
			"status":1
		}; 
		var responseData = {
			code:200,
			data:data
		};				
		miniHttp.response(responseData);
	}
	var reportError = function(){
		var data = {
			"status":0
		}; 
		var responseData = {
			code:200,
			data:data
		};				
		miniHttp.response(responseData);
	}
	//存在回调地址，反向判断服务器是否正常
	var callbackUrl = miniHttp.queryParam("callback_url","");
	if(callbackUrl!==""){
		try{
			http.get(callbackUrl, function(res) {
				if(res.statusCode==200){
					reportSuccess();
				}else{ 
					self.logger.error({"url":callbackUrl,"code":res.statusCode}); 
					reportError();
				} 
			});
		}catch(error){
			self.logger.error({"url":callbackUrl,"error":error}); 
			reportError();
		}
	}else{
		reportError();
	}
		
} 
exports.MiniNodeStatus = MiniNodeStatus;
util.inherits(MiniNodeStatus, EventEmitter);